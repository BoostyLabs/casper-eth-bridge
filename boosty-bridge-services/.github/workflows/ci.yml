name: "CI"

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

env:
  GO_VERSION: 1.18
  NODE_VERSION: 18.x

jobs:

  changes:
    runs-on: ubuntu-latest
    outputs:
      conference: ${{ steps.filter.outputs.conference }}
      console: ${{ steps.filter.outputs.console }}
    steps:
      - uses: actions/checkout@v3
      - name: Detect Changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            conference:
              - 'web/conference/**'
            console:
              - 'web/console/**'              

  test-go:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1212
          POSTGRES_DB: private_keys
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Configure git for private modules
        run: |
          git config --global url."https://${{ secrets.GIT_ACCESS_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Check go mod
        run: |
          go mod tidy
          git diff --exit-code go.mod      

      - name: Build
        run: go install ./...

      - name: Check tests
        run: go test ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          version: latest
          skip-build-cache: true
          skip-pkg-cache: true

  test-console:
    needs: changes
    if: ${{ needs.changes.outputs.console == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Configure git for private modules
        run: |
          git config --global url."https://${{ secrets.GIT_ACCESS_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"          

      - name: Install
        run: npm ci
        working-directory: ./web/console

      - name: Lint
        run: npm run lint
        working-directory: ./web/console

      - name: Build
        run: npm run build
        working-directory: ./web/console

      - name: Test
        run: npm test
        working-directory: ./web/console

  test-conference:
    needs: changes
    if: ${{ needs.changes.outputs.conference == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Configure git for private modules
        run: |
          git config --global url."https://${{ secrets.GIT_ACCESS_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"          

      - name: Install Conference
        run: npm ci
        working-directory: ./web/conference

      - name: Lint Conference
        run: npm run lint
        working-directory: ./web/conference

      - name: Build Conference
        run: npm run build
        working-directory: ./web/conference
